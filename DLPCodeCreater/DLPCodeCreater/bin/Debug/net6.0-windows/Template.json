{
  "grid_view_normal": 
"      {{
        headerName: '{0}',
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        type: 'text',
        editable: false,
        width: 100,
        suppressSizeToFit: true,
      }},
",
  "grid_view_number": 
"      {{
        headerName: '{0}',
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        type: 'number',
        editable: false,
        width: 80,
        valueFormatter: this._pubFunction.formatNumber.bind(this, 2), //含 千份位＋顯示小數點後幾位
        cellStyle: this._pubFunction.rightTextAlign,
        floatingFilterComponent: 'numberFilterRenderer',
        suppressSizeToFit: true,
      }},
",
  "grid_view_date" : 
"      {{
        headerName: '{0}',
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        type: 'date',
        editable: false,
        width: 120,
        suppressSizeToFit: true,
        valueFormatter: this._pubFunction.formatDate,
        // valueFormatter: (params) => {{
        //   return this._pubFunction.formatDate({{ value: params.data?.{1} }}, 'yyyy/MM/dd');
        // }},
      }},
",
  "grid_confirm" : 
"      {{
        headerName: '{0}', //勾選
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        editable: false,
        filter: false,
        sortable: false,
        cellRenderer: 'confirmRenderer',
        width: 50,
        suppressSizeToFit: true,
        cellRendererParams: (params) => {{
          // if (params.data?.ITEM === 0) return {{ disabled: true }};

          return {{
            checkValueType: EAgGridCheckValueType.booleanType,
            // afterCheckedFunc: (value: boolean) => {{
            //   if (value) {{
            //     //判斷通過，勾選
            //     params.data.{1} = true;
            //   }} else {{
            //     //取消勾選
            //     params.data.{1} = false;
            //   }}
            //   params.node.setData(params.data);
            // }},
          }};
        }},
      }},
",
  "grid_check" : 
"      {{
        headerName: '{0}', 
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        type: ['wrappingHeader'],
        editable: false,
        filter: false,
        sortable: false,
        cellRenderer: 'checkRenderer',
        width: 50,
        suppressSizeToFit: true,
        valueGetter: (params) => {{
          return params.data?.{1} === 'Y';
        }},
        valueSetter: (params) => {{
          params.data.{1} = params.newValue ? 'Y' : null;
          return true;
        }},
        cellRendererParams: (params) => {{
          // if (params.data?.ITEM === 0) return {{ disabled: true }};
          return {{
            checkValueType: EAgGridCheckValueType.stringType,
            onCheckedFunc: (value: string) => {{
              // if (value == 'Y')
              //   params.data.{1} = 'Y';  //勾選
              // else
              //   params.data.{1} = 'N';  //取消勾選
              // params.node.setData(params.data);
            }},
          }};
        }},
      }},
",
  "grid_select" : 
"      {{
        headerName: '{0}',
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        type: 'text',
        editable: true, //(params) => {{return params.data?.ITEM === 0;}},// 可新增不可修改
        sortable: true,
        width: 100,
        suppressSizeToFit: true,
        valueFormatter: (params) => {{
          const displayValue = params.node?.data?.{1} ?? '';
          {2}
        }},
        // valueSetter: (params) => {{
        //   const optKey = params.newValue?.[0];
        //   params.data.{1} = optKey;
        //   return true;
        // }},
        cellEditor: 'selectRenderer',
        cellEditorParams: {{
          control: {{
            multiple: false,
            field: ['{1}'],
            {3}
          }},
        }},
        floatingFilterComponent: 'selectFilterRenderer',
        floatingFilterComponentParams: {{
          {3}
        }},
      }},
",


  "form_normal" : 
"      new FormTextBox({{
        key: '{1}',
        label: '{0}',
        // labelWidth: 5,
        flex: '20',
        order: 1,
        class: 'pr-1',
        // readonly: true,
      }}),
",

  "form_btn" : 
"      new FormButtonAuthority({{
        showButtons: [
          <IButtons>{{
            key: 'confirm',
            color: 'primary',
            text: '{0}',
            icon: 'done_all',
            visible: true,
            //visibledAsync: this.State.FormRefs.visibleAsync$,
            clickFunction: () => {{
              //this.Service.pushSave();
            }},
          }},
        ],
        flex: '20',
        order: 1,
        class: 'pr-1',
      }}),
",
  "form_radio_btn" : 
"      new FormRadioButton({{
        key: '{0}',
        label: '',
        options: of([
          // {{ key: 'A', value: '中文顯示A' }},
          // {{ key: 'B', value: '中文顯示B' }},
          // {{ key: 'C', value: '中文顯示C' }},
        ]),
        flex: '45',
        // value: 'A',
        inputChangeFunc: (params) => {{
          // this._Service.query();
        }},
      }}),
",
  "form_hidden" : 
"      new FormHidden({
        key: '',
        label: '',
        order: 1,
        flex: '20',
      }),
",
  "form_drop_down_list" : 
"      new FormDropDownList({{
        key: '{0}',
        label: '{1}',
        labelWidth: 10,
        flex: 25,
        class: 'pr-1',
        options: of([
          // {{ key: 'A', value: '顯示文字A' }},
          // {{ key: 'B', value: '顯示文字B' }},
          // {{ key: 'C', value: '顯示文字C' }},
        ]),
        inputChangeFunc: (value, form) => {{
          //this._Service.update();
        }},
      }}),
",
  "form_hidden2" : 
"      new FormHidden({}),
",


  "grid_Lovl" : 
"      {{
        headerName: '{0}',
        headerValueGetter: this._agService.headerValueGetter,
        field: '{1}',
        suppressSizeToFit: true,
        editable: true, //(params) => {{ return params.data.ITEM === 0; // 可新增不可修改 }},
        sortable: true,
        width: 120,
        type: 'text',
        cellEditor: 'lovEditor',
        cellEditorParams: (params) => {{
          return <ILovEditorParams>{{
            apiParams: {{
              // sp前綴
              moduleNo: 模組名稱,
              programNo: '{2}',
              commonApiType: ECommonApiType.CallStoreProcedureDataSet,
            }},
            queryAction: sp名稱, // sp名稱
            //payload: {{}}, // input
            refCursorKeys: [v表名稱Info, v表名稱Count], // output
            colDefs: [
{3}            ],
            keyMapping: {{              {4}
            }},
            checkInput: true,
            onPostChange: (params) => {{
              if (params.isValidInput) //this._Service.ServiceFun(params.value);
            }},
          }};
        }},
      }},
",
  "form_Lovl" : 
"      new FormLov({{
        key: '{0}',
        label: '{1}',
        //labelWidth: '10',
        apiParams: {{
          moduleNo: 模組名稱,
          programNo: '{2}',
          commonApiType: ECommonApiType.CallStoreProcedureDataSet,
        }},
        queryAction: SP名稱, // sp名稱
        refCursorKeys: [v表名稱Info, v表名稱Count],
        colDefs: [
{3}        ],
        keyMapping: {{{4}
        }},
        checkInput: true,
        flex: '25',
        class: 'pr-1',
      }}),
",

}